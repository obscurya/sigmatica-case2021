{"version":3,"sources":["theme.js","redux/types.js","redux/appReducer.js","redux/rootReducer.js","redux/actions.js","components/App/App.style.js","components/LeftDrawer/LeftDrawer.style.js","components/LeftDrawer/LeftDrawer.js","components/Header/Header.style.js","components/Header/Header.js","components/ProcessList/ProcessList.style.js","components/ProcessList/ProcessList.js","components/Profile/Profile.style.js","components/Profile/Profile.js","components/Process/Process.style.js","components/Process/Process.js","components/Employees/Employees.style.js","components/Employees/Employees.js","components/Auth/Auth.style.js","components/Auth/Auth.js","components/Schedule/Schedule.style.js","components/Schedule/Schedule.js","components/Specialty/Specialty.style.js","components/Specialty/Specialty.js","components/CommonDocuments/CommonDocuments.style.js","components/CommonDocuments/CommonDocuments.js","components/CommonDocument/CommonDocument.style.js","components/CommonDocument/CommonDocument.js","components/App/App.js","index.js"],"names":["theme","createMuiTheme","palette","primary","main","secondary","error","red","A400","background","default","FETCH_DATA","SET_TECH_PROCESS","AUTH_USER","initialState","data","pages","link","title","techProcess","user","rootReducer","combineReducers","app","state","action","type","types","payload","findProcessById","processId","_","getState","processes","find","process","id","createNestedProcess","parentProcess","dispatch","process_","subprocesses","opened","map","subprocess","toggleProcessOpenedById","forEach","index","setTechProcess","findEmployeesByProcess","reduce","employees","employee","push","findEmployeeById","concat","getAllProcessDataById","resources","resourceId","resource","products","product","providers","indexOf","getProcessesByResourceId","getResourceById","productId","consumers","getProcessesByProductId","getProductById","employee_","employeeId","findProcessesByEmployeeId","findSpecialtyById","specialtyId","specialties","specialty","authUser","authData","localStorage","removeItem","email","value","contacts","password","setItem","JSON","stringify","parse","getItem","useStyles","makeStyles","root","maxWidth","flexGrow","toolbar","mixins","titleContainer","display","alignItems","padding","spacing","width","message","LeftDrawer","drawerOpened","toggleDrawer","appState","useSelector","classes","Drawer","anchor","open","onClose","className","Typography","variant","IconButton","size","onClick","Close","Divider","List","slice","page","to","ListItem","button","component","Link","ListItemText","color","menuButton","marginRight","avatar","height","Header","useDispatch","location","useLocation","useState","employeeAsUser","setEmployeeAsUser","filter","pathname","split","useEffect","AppBar","position","elevation","Toolbar","edge","Menu","Avatar","src","image","AccountCircle","nestedList","marginLeft","ProcessList","disablePadding","dense","renderNestedList","Fragment","name","description","e","preventDefault","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","flexDirection","marginBottom","card","media","backgroundPosition","linkSpecialty","textDecoration","marginTop","contact","paddingLeft","cardActions","Profile","phone","params","useParams","setEmployee","processesOpened","setProcessesOpened","Button","disableElevation","fullWidth","Card","CardMedia","CardContent","gutterBottom","AlternateEmailOutlined","fontSize","Phone","CardActions","expandButton","tablePaper","tableTitle","tableBody","borderBottom","Process","setProcess","Paper","TableContainer","Table","table","TableHead","TableRow","TableCell","align","TableBody","scope","length","provider","consumer","Boolean","Employees","setEmployees","input","alert","bottom","left","right","Auth","setAuthData","handleAuthData","key","target","TextField","label","helperText","onChange","result","auth","Alert","severity","justifyContent","schedule","scheduleHeader","day","chip","margin","dayOff","Schedule","setSchedule","activeStep","setActiveStep","toggleDay","days","d","Chip","date","setDay","Date","getDate","getMonth","formatDate","timeStart","timeEnd","MobileStepper","steps","nextButton","disabled","KeyboardArrowRight","backButton","KeyboardArrowLeft","Specialty","setSpecialty","instructionOpened","setInstructionOpened","instruction","paragraph","CommonDocuments","commonDocuments","document","CommonDocument","setDocument","documentId","text","App","setDrawerOpened","a","axios","get","i","gender","image_url","slugify","join","toLowerCase","Math","floor","random","Container","fixed","disableGutters","exact","path","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","ThemeProvider","CssBaseline","getElementById"],"mappings":"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","file":"static/js/main.fe0560e6.chunk.js","sourcesContent":["import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#0166B3',\r\n    },\r\n    secondary: {\r\n      main: '#19857b',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: '#fff',\r\n    },\r\n  },\r\n});\r\n","export const FETCH_DATA = 'FETCH_DATA';\r\nexport const SET_TECH_PROCESS = 'SET_TECH_PROCESS';\r\nexport const AUTH_USER = 'AUTH_USER';\r\n","import * as types from './types';\r\n\r\nconst initialState = {\r\n  data: null,\r\n  pages: [\r\n    {\r\n      link: 'schedule',\r\n      title: 'Мое расписание',\r\n    },\r\n    {\r\n      link: 'process-list',\r\n      title: 'Технологический процесс',\r\n    },\r\n    // {\r\n    //   link: 'departments',\r\n    //   title: 'Отделы',\r\n    // },\r\n    {\r\n      link: 'employees',\r\n      title: 'Сотрудники',\r\n    },\r\n    {\r\n      link: 'common-documents',\r\n      title: 'Общие документы',\r\n    },\r\n    {\r\n      link: 'profile',\r\n      title: 'Профиль',\r\n    },\r\n    {\r\n      link: 'specialties',\r\n      title: 'Специализация',\r\n    },\r\n  ],\r\n  techProcess: null,\r\n  user: null,\r\n};\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.AUTH_USER:\r\n      return { ...state, user: action.payload };\r\n    case types.SET_TECH_PROCESS:\r\n      return { ...state, techProcess: action.payload };\r\n    case types.FETCH_DATA:\r\n      return { ...state, data: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { appReducer } from './appReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  app: appReducer,\r\n});\r\n","import axios from 'axios';\r\nimport slugify from 'slugify';\r\nimport * as types from './types';\r\n\r\nexport const fetchData = () => async dispatch => {\r\n  const data = (await axios.get('/static/data.json')).data;\r\n\r\n  for (let i = 0; i < data.employees.length; i++) {\r\n    const employee = data.employees[i];\r\n    const image = (\r\n      await axios.get(`https://fakeface.rest/face/json?gender=${employee.gender}&minimum_age=23&maximum_age=40`)\r\n    ).data.image_url;\r\n\r\n    data.employees[i] = {\r\n      ...employee,\r\n      id: `${i + 1}`,\r\n      image,\r\n      contacts: {\r\n        email: `${slugify(employee.name.split(' ').slice(0, 2).join(' '), '.').toLowerCase()}@rosatom.ru`,\r\n        phone: `8${Math.floor(Math.random() * 10000000000)}`,\r\n      },\r\n    };\r\n  }\r\n\r\n  dispatch({ type: types.FETCH_DATA, payload: data });\r\n  dispatch(setTechProcess());\r\n};\r\n\r\nexport const findProcessById = processId => (_, getState) => {\r\n  const { app } = getState();\r\n  return app.data.processes.find(process => process.id === processId);\r\n};\r\n\r\nexport const createNestedProcess = (process, parentProcess = '') => dispatch => {\r\n  const process_ = dispatch(findProcessById(process.id));\r\n\r\n  if (parentProcess) {\r\n    process_.parentProcess = parentProcess;\r\n  }\r\n\r\n  if (process.subprocesses) {\r\n    process_.opened = false;\r\n    process_.subprocesses = process.subprocesses.map(subprocess =>\r\n      dispatch(createNestedProcess(subprocess, process.id))\r\n    );\r\n  }\r\n\r\n  return process_;\r\n};\r\n\r\nexport const toggleProcessOpenedById = (process, processId) => dispatch => {\r\n  if (process.id === processId) {\r\n    process.opened = !process.opened;\r\n  } else if (process.subprocesses) {\r\n    process.subprocesses.forEach((subprocess, index) => {\r\n      process.subprocesses[index] = dispatch(toggleProcessOpenedById(subprocess, processId));\r\n    });\r\n  }\r\n\r\n  return process;\r\n};\r\n\r\nexport const toggleProcessOpened = processId => (dispatch, getState) => {\r\n  const { app } = getState();\r\n  dispatch({ type: types.SET_TECH_PROCESS, payload: dispatch(toggleProcessOpenedById(app.techProcess, processId)) });\r\n};\r\n\r\nexport const setTechProcess = () => (dispatch, getState) => {\r\n  const { app } = getState();\r\n  dispatch({ type: types.SET_TECH_PROCESS, payload: dispatch(createNestedProcess(app.data.process)) });\r\n};\r\n\r\nexport const getProcessesByResourceId = resourceId => (_, getState) => {\r\n  const { app } = getState();\r\n  const processes = [];\r\n\r\n  app.data.processes.forEach(process => {\r\n    if (process.products.indexOf(resourceId) >= 0) {\r\n      processes.push(process);\r\n    }\r\n  });\r\n\r\n  return processes;\r\n};\r\n\r\nexport const getResourceById = resourceId => (dispatch, getState) => {\r\n  const { app } = getState();\r\n  const resource = app.data.products.find(product => product.id === resourceId);\r\n\r\n  resource.providers = dispatch(getProcessesByResourceId(resourceId));\r\n\r\n  return resource;\r\n};\r\n\r\nexport const getProcessesByProductId = productId => (_, getState) => {\r\n  const { app } = getState();\r\n  const processes = [];\r\n\r\n  app.data.processes.forEach(process => {\r\n    if (process.resources.indexOf(productId) >= 0) {\r\n      processes.push(process);\r\n    }\r\n  });\r\n\r\n  return processes;\r\n};\r\n\r\nexport const getProductById = productId => (dispatch, getState) => {\r\n  const { app } = getState();\r\n  const product = app.data.products.find(product => product.id === productId);\r\n\r\n  product.consumers = dispatch(getProcessesByProductId(productId));\r\n\r\n  return product;\r\n};\r\n\r\nexport const findEmployeesByProcess = process => dispatch => {\r\n  if (!process.subprocesses) return [];\r\n\r\n  return process.subprocesses.reduce((employees, subprocess) => {\r\n    if (subprocess.employee) {\r\n      employees.push(dispatch(findEmployeeById(subprocess.employee)));\r\n    } else {\r\n      employees = employees.concat(dispatch(findEmployeesByProcess(subprocess)));\r\n    }\r\n\r\n    return employees;\r\n  }, []);\r\n};\r\n\r\nexport const getAllProcessDataById = processId => dispatch => {\r\n  let process = dispatch(findProcessById(processId));\r\n\r\n  if (!process) return;\r\n\r\n  process = { ...process };\r\n  process.resources = process.resources.map(resourceId => dispatch(getResourceById(resourceId)));\r\n  process.products = process.products.map(productId => dispatch(getProductById(productId)));\r\n\r\n  if (process.employee) {\r\n    process.employees = [dispatch(findEmployeeById(process.employee))];\r\n  } else {\r\n    const employees = dispatch(findEmployeesByProcess(process));\r\n\r\n    process.employees = [];\r\n\r\n    employees.forEach(employee => {\r\n      if (!process.employees.find(employee_ => employee_.id === employee.id)) {\r\n        process.employees.push(employee);\r\n      }\r\n    });\r\n  }\r\n\r\n  if (process.parentProcess) {\r\n    process.parentProcess = dispatch(findProcessById(process.parentProcess));\r\n  }\r\n\r\n  return process;\r\n};\r\n\r\nexport const findEmployeeById = employeeId => (_, getState) => {\r\n  const { app } = getState();\r\n  return app.data.employees.find(employee => employee.id === employeeId);\r\n};\r\n\r\nexport const findProcessesByEmployeeId = employeeId => (_, getState) => {\r\n  const { app } = getState();\r\n  const processes = [];\r\n\r\n  app.data.processes.forEach(process => {\r\n    if (process.employee === employeeId) {\r\n      processes.push(process);\r\n    }\r\n  });\r\n\r\n  return processes;\r\n};\r\n\r\nexport const findSpecialtyById = specialtyId => (_, getState) => {\r\n  const { app } = getState();\r\n  return app.data.specialties.find(specialty => specialty.id === specialtyId);\r\n};\r\n\r\nexport const getAllEmployeeDataById = employeeId => dispatch => {\r\n  let employee = dispatch(findEmployeeById(employeeId));\r\n\r\n  if (!employee) return;\r\n\r\n  employee = { ...employee };\r\n  employee.processes = dispatch(findProcessesByEmployeeId(employeeId));\r\n  employee.specialty = dispatch(findSpecialtyById(employee.specialty));\r\n\r\n  return employee;\r\n};\r\n\r\nexport const getEmployees = () => (_, getState) => {\r\n  const { app } = getState();\r\n  return app.data.employees;\r\n};\r\n\r\nexport const findEmployeeByEmail = email => (_, getState) => {\r\n  const { app } = getState();\r\n  return app.data.employees.find(employee => employee.contacts.email === email);\r\n};\r\n\r\nexport const authUser = authData => dispatch => {\r\n  if (authData === 'logout') {\r\n    localStorage.removeItem('user');\r\n    dispatch({ type: types.AUTH_USER, payload: null });\r\n  } else {\r\n    if (authData) {\r\n      authData = { ...authData };\r\n\r\n      const employee = dispatch(findEmployeeByEmail(authData.email.value));\r\n\r\n      if (!employee) {\r\n        authData.email.error = 'Такого пользователя не существует';\r\n        authData.password.error = '';\r\n        return authData;\r\n      } else {\r\n        authData.email.error = '';\r\n      }\r\n\r\n      if (authData.password.value !== employee.password) {\r\n        authData.password.error = 'Неверный пароль';\r\n        return authData;\r\n      }\r\n\r\n      localStorage.setItem('user', JSON.stringify(employee));\r\n    }\r\n\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n    if (user) {\r\n      dispatch({ type: types.AUTH_USER, payload: user });\r\n    }\r\n  }\r\n};\r\n\r\nexport const createScheduleByEmployeeId = employeeId => dispatch => {\r\n  const processes = dispatch(findProcessesByEmployeeId(employeeId));\r\n  const schedule = {\r\n    employeeId,\r\n    days: [],\r\n  };\r\n\r\n  for (let d = 0; d < 5; d++) {\r\n    schedule.days[d] = [];\r\n\r\n    processes.forEach(process => {\r\n      if (process.schedule.days.indexOf(d + 1) !== -1) {\r\n        schedule.days[d].push(process);\r\n      }\r\n    });\r\n  }\r\n\r\n  return schedule;\r\n};\r\n\r\nexport const findCommonDocumentById = documentId => (_, getState) => {\r\n  const { app } = getState();\r\n  return app.data.commonDocuments.find(document => document.id === documentId);\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  root: {\r\n    maxWidth: '100%',\r\n    flexGrow: 1,\r\n    background: '#fff',\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n}));\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  titleContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  title: {\r\n    width: '100%',\r\n  },\r\n  message: {\r\n    maxWidth: 250,\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n","import { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { Typography, Drawer, List, ListItem, ListItemText, Divider, IconButton } from '@material-ui/core';\r\nimport { Close } from '@material-ui/icons';\r\nimport { useStyles } from './LeftDrawer.style';\r\n\r\nexport const LeftDrawer = ({ drawerOpened, toggleDrawer }) => {\r\n  const appState = useSelector(state => state.app);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Drawer anchor=\"left\" open={drawerOpened} onClose={toggleDrawer}>\r\n      <div>\r\n        <div className={classes.titleContainer}>\r\n          <Typography className={classes.title} variant=\"h6\">\r\n            ГК Росатом\r\n          </Typography>\r\n          <IconButton size=\"small\" onClick={toggleDrawer}>\r\n            <Close />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        {appState.user ? (\r\n          <List>\r\n            {appState.pages.slice(0, 4).map((page, index) => {\r\n              const to = page.link === 'schedule' ? `/${page.link}/${appState.user.id}` : `/${page.link}`;\r\n              return (\r\n                <ListItem key={index} button component={Link} to={to} onClick={toggleDrawer}>\r\n                  <ListItemText primary={page.title} />\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </List>\r\n        ) : (\r\n          <Typography className={classes.message} variant=\"body2\">\r\n            Авторизуйтесь для просмотра контента\r\n          </Typography>\r\n        )}\r\n        <Divider />\r\n        <div className={classes.message}>\r\n          <Typography variant=\"body2\" color=\"textSecondary\">\r\n            Демонстрационный прототип приложения, разработанного для чемпионата CASE-IN 2021, направление Цифровой Атом.\r\n            <br />\r\n            <br />\r\n            Авторы: команда Сигматика, кафедра Информационных технологий ИГЭУ.\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n    </Drawer>\r\n  );\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  avatar: {\r\n    width: 24,\r\n    height: 24,\r\n  },\r\n}));\r\n","import { useLocation, Link } from 'react-router-dom';\r\nimport { AppBar, Toolbar, Typography, IconButton, Avatar } from '@material-ui/core';\r\nimport { Menu as MenuIcon, AccountCircle } from '@material-ui/icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useStyles } from './Header.style';\r\nimport { findEmployeeById } from '../../redux/actions';\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport const Header = ({ toggleDrawer }) => {\r\n  const dispatch = useDispatch();\r\n  const appState = useSelector(state => state.app);\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  const [employeeAsUser, setEmployeeAsUser] = useState(null);\r\n\r\n  const page = appState.pages.filter(page => location.pathname.split('/').indexOf(page.link) !== -1)[0];\r\n\r\n  useEffect(() => {\r\n    if (appState.data && appState.user && (!employeeAsUser || employeeAsUser.id !== appState.user)) {\r\n      setEmployeeAsUser(dispatch(findEmployeeById(appState.user.id)));\r\n    } else {\r\n      setEmployeeAsUser(null);\r\n    }\r\n  }, [appState.data, appState.user, employeeAsUser, dispatch]);\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" elevation={0}>\r\n      <Toolbar variant=\"dense\">\r\n        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" onClick={() => toggleDrawer(true)}>\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography variant=\"body1\" className={classes.title}>\r\n          {employeeAsUser ? (page ? page.title : 'Not Found') : 'Авторизация'}\r\n        </Typography>\r\n        {employeeAsUser ? (\r\n          <IconButton color=\"inherit\" edge=\"end\" component={Link} to={`/profile/${employeeAsUser.id}`}>\r\n            <Avatar className={classes.avatar} src={employeeAsUser.image} />\r\n          </IconButton>\r\n        ) : (\r\n          <IconButton color=\"inherit\" edge=\"end\">\r\n            <AccountCircle />\r\n          </IconButton>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  nestedList: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Collapse, List, ListItem, ListItemText, IconButton } from '@material-ui/core';\r\nimport { ExpandLess, ExpandMore } from '@material-ui/icons';\r\nimport { useStyles } from './ProcessList.style';\r\nimport { toggleProcessOpened } from '../../redux/actions';\r\n\r\nexport const ProcessList = () => {\r\n  const dispatch = useDispatch();\r\n  const appState = useSelector(state => state.app);\r\n  const classes = useStyles();\r\n\r\n  const renderNestedList = process => {\r\n    return (\r\n      <React.Fragment key={process.id}>\r\n        <ListItem component={Link} to={`/process-list/${process.id}`}>\r\n          <ListItemText primary={process.name} secondary={process.description} />\r\n          {process.subprocesses && (\r\n            <IconButton\r\n              onClick={e => {\r\n                e.preventDefault();\r\n                dispatch(toggleProcessOpened(process.id));\r\n              }}\r\n            >\r\n              {process.opened ? <ExpandLess /> : <ExpandMore />}\r\n            </IconButton>\r\n          )}\r\n        </ListItem>\r\n        {process.subprocesses && (\r\n          <Collapse in={process.opened} timeout=\"auto\" unmountOnExit>\r\n            <List className={classes.nestedList} disablePadding dense>\r\n              {process.subprocesses.map(subprocess => renderNestedList(subprocess))}\r\n            </List>\r\n          </Collapse>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return appState.techProcess ? (\r\n    <List disablePadding dense>\r\n      {renderNestedList(appState.techProcess)}\r\n    </List>\r\n  ) : null;\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  button: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  card: {\r\n    maxWidth: 345,\r\n    width: '100%',\r\n  },\r\n  media: {\r\n    height: 250,\r\n    backgroundPosition: 'center',\r\n  },\r\n  linkSpecialty: {\r\n    display: 'block',\r\n    textDecoration: 'none',\r\n    color: `${theme.palette.primary.main} !important`,\r\n  },\r\n  contacts: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  contact: {\r\n    display: 'flex',\r\n    '& > *:last-child': {\r\n      paddingLeft: theme.spacing(1),\r\n    },\r\n  },\r\n  cardActions: {\r\n    display: 'flex',\r\n    '& > *:first-child': {\r\n      marginLeft: theme.spacing(1),\r\n      width: '100%',\r\n    },\r\n  },\r\n}));\r\n","import { useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Card, CardContent, CardActions, Typography, CardMedia, IconButton, Collapse, Button } from '@material-ui/core';\r\nimport { AlternateEmailOutlined, Phone, ExpandMore, ExpandLess } from '@material-ui/icons';\r\nimport { authUser, getAllEmployeeDataById } from '../../redux/actions';\r\nimport { useStyles } from './Profile.style';\r\n\r\nexport const Profile = () => {\r\n  const dispatch = useDispatch();\r\n  const appState = useSelector(state => state.app);\r\n  const params = useParams();\r\n  const classes = useStyles();\r\n  const [employee, setEmployee] = useState(null);\r\n  const [processesOpened, setProcessesOpened] = useState(false);\r\n\r\n  const toggleProcessesOpened = () => {\r\n    setProcessesOpened(!processesOpened);\r\n  };\r\n\r\n  const formatPhone = phone => {\r\n    return `${phone[0]} (${phone.slice(1, 4)}) ${phone.slice(4, 7)}-${phone.slice(7, 9)}-${phone.slice(9)}`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (appState.data && (!employee || employee.id !== params.employeeId)) {\r\n      setEmployee(dispatch(getAllEmployeeDataById(params.employeeId)));\r\n    }\r\n  }, [appState.data, employee, params.employeeId, dispatch]);\r\n\r\n  return employee ? (\r\n    <div className={classes.root}>\r\n      {appState.user.id === employee.id && (\r\n        <Button\r\n          className={classes.button}\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          component=\"div\"\r\n          disableElevation\r\n          fullWidth\r\n          onClick={() => dispatch(authUser('logout'))}\r\n        >\r\n          Выйти из аккаунта\r\n        </Button>\r\n      )}\r\n      <Card className={classes.card}>\r\n        <CardMedia className={classes.media} image={employee.image} />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h6\">\r\n            {employee.name}\r\n          </Typography>\r\n          <Typography\r\n            className={classes.linkSpecialty}\r\n            variant=\"body2\"\r\n            color=\"textSecondary\"\r\n            component={Link}\r\n            to={`/specialties/${employee.specialty.id}`}\r\n            gutterBottom\r\n          >\r\n            {employee.specialty.name}\r\n          </Typography>\r\n          <div className={classes.contacts}>\r\n            <Typography className={classes.contact} variant=\"body2\" color=\"textSecondary\" gutterBottom>\r\n              <AlternateEmailOutlined fontSize=\"small\" />\r\n              <span>{employee.contacts.email}</span>\r\n            </Typography>\r\n            <Typography className={classes.contact} variant=\"body2\" color=\"textSecondary\">\r\n              <Phone fontSize=\"small\" />\r\n              <span>{formatPhone(employee.contacts.phone)}</span>\r\n            </Typography>\r\n          </div>\r\n        </CardContent>\r\n        <CardActions className={classes.cardActions}>\r\n          <Typography variant=\"body2\">Технологические процессы</Typography>\r\n          <IconButton className={classes.expandButton} onClick={toggleProcessesOpened}>\r\n            {processesOpened ? <ExpandLess /> : <ExpandMore />}\r\n          </IconButton>\r\n        </CardActions>\r\n        <Collapse in={processesOpened} timeout=\"auto\" unmountOnExit>\r\n          <CardContent>\r\n            {employee.processes.map(process => (\r\n              <Typography\r\n                key={process.id}\r\n                className={classes.linkSpecialty}\r\n                variant=\"body2\"\r\n                color=\"textSecondary\"\r\n                component={Link}\r\n                to={`/process-list/${process.id}`}\r\n                gutterBottom\r\n              >\r\n                {process.name}\r\n              </Typography>\r\n            ))}\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n    </div>\r\n  ) : null;\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  description: {\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n  tablePaper: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  tableTitle: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  tableBody: {\r\n    '& > tr:last-child > *': {\r\n      borderBottom: 'none',\r\n    },\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: `${theme.palette.primary.main} !important`,\r\n  },\r\n  employee: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    '& > *:last-child': {\r\n      width: '100%',\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Typography,\r\n  TableContainer,\r\n  Paper,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Avatar,\r\n} from '@material-ui/core';\r\nimport { useStyles } from './Process.style';\r\nimport { getAllProcessDataById } from '../../redux/actions';\r\n\r\nexport const Process = () => {\r\n  const dispatch = useDispatch();\r\n  const appState = useSelector(state => state.app);\r\n  const params = useParams();\r\n  const classes = useStyles();\r\n  const [process, setProcess] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (appState.data && (!process || process.id !== params.processId)) {\r\n      setProcess(dispatch(getAllProcessDataById(params.processId)));\r\n    }\r\n  }, [process, appState.data, params.processId, dispatch]);\r\n\r\n  return process ? (\r\n    <div className={classes.root}>\r\n      <Typography gutterBottom variant=\"h6\">\r\n        {process.name}\r\n      </Typography>\r\n      <Typography className={classes.description} gutterBottom variant=\"body2\">\r\n        {process.description}\r\n      </Typography>\r\n      <Paper className={classes.tablePaper} variant=\"outlined\">\r\n        {/* <Typography className={classes.tableTitle} variant=\"body1\" component=\"div\">\r\n          Используемые ресурсы\r\n        </Typography> */}\r\n        <TableContainer>\r\n          <Table className={classes.table} size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Ресурс</TableCell>\r\n                <TableCell align=\"right\">Процесс-поставщик</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody className={classes.tableBody}>\r\n              {process.resources.map(resource => (\r\n                <TableRow key={resource.id}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {resource.name}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    {resource.providers.length\r\n                      ? resource.providers.map((provider, index) => (\r\n                          <React.Fragment key={index}>\r\n                            <Link className={classes.link} to={`/process-list/${provider.id}`}>\r\n                              {provider.name}\r\n                            </Link>\r\n                            {index < resource.providers.length && <br />}\r\n                          </React.Fragment>\r\n                        ))\r\n                      : 'Внешняя среда'}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n      <Paper className={classes.tablePaper} variant=\"outlined\">\r\n        {/* <Typography className={classes.tableTitle} variant=\"body1\" component=\"div\">\r\n          Производимые продукты\r\n        </Typography> */}\r\n        <TableContainer>\r\n          <Table size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Продукт</TableCell>\r\n                <TableCell align=\"right\">Процесс-потребитель</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody className={classes.tableBody}>\r\n              {process.products.map(product => (\r\n                <TableRow key={product.id}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {product.name}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    {product.consumers.length\r\n                      ? product.consumers.map((consumer, index) => (\r\n                          <React.Fragment key={index}>\r\n                            <Link className={classes.link} to={`/process-list/${consumer.id}`}>\r\n                              {consumer.name}\r\n                            </Link>\r\n                            {index < product.consumers.length && <br />}\r\n                          </React.Fragment>\r\n                        ))\r\n                      : 'Внешняя среда'}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n      {process.parentProcess && (\r\n        <Paper className={classes.tablePaper} variant=\"outlined\">\r\n          <TableContainer>\r\n            <Table size=\"small\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Процесс-родитель</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody className={classes.tableBody}>\r\n                <TableRow>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <Link className={classes.link} to={`/process-list/${process.parentProcess.id}`}>\r\n                      {process.parentProcess.name}\r\n                    </Link>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Paper>\r\n      )}\r\n      {process.subprocesses && (\r\n        <Paper className={classes.tablePaper} variant=\"outlined\">\r\n          <TableContainer>\r\n            <Table size=\"small\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Подпроцессы</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody className={classes.tableBody}>\r\n                {process.subprocesses.map(subprocess => (\r\n                  <TableRow key={subprocess.id}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Link className={classes.link} to={`/process-list/${subprocess.id}`}>\r\n                        {subprocess.name}\r\n                      </Link>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Paper>\r\n      )}\r\n      {Boolean(process.employees.length) && (\r\n        <Paper className={classes.tablePaper} variant=\"outlined\">\r\n          <TableContainer>\r\n            <Table size=\"small\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Ответственные сотрудники</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody className={classes.tableBody}>\r\n                {process.employees.map(employee => (\r\n                  <TableRow key={employee.id}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <div className={classes.employee}>\r\n                        <Avatar src={employee.image} />\r\n                        <Link className={classes.link} to={`/profile/${employee.id}`}>\r\n                          {employee.name}\r\n                        </Link>\r\n                      </div>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Paper>\r\n      )}\r\n    </div>\r\n  ) : null;\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  tablePaper: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  tableBody: {\r\n    '& > tr:last-child > *': {\r\n      borderBottom: 'none',\r\n    },\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: `${theme.palette.primary.main} !important`,\r\n  },\r\n  employee: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    '& > *:last-child': {\r\n      width: '100%',\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Avatar } from '@material-ui/core';\r\nimport { useStyles } from './Employees.style';\r\nimport { getEmployees } from '../../redux/actions';\r\n\r\nexport const Employees = () => {\r\n  const dispatch = useDispatch();\r\n  const appState = useSelector(state => state.app);\r\n  const classes = useStyles();\r\n  const [employees, setEmployees] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (appState.data && !employees) {\r\n      setEmployees(dispatch(getEmployees()));\r\n    }\r\n  }, [employees, appState.data, dispatch]);\r\n\r\n  return employees ? (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.tablePaper} variant=\"outlined\">\r\n        <TableContainer>\r\n          <Table size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Сотрудники</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody className={classes.tableBody}>\r\n              {employees.map(employee => (\r\n                <TableRow key={employee.id}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <div className={classes.employee}>\r\n                      <Avatar src={employee.image} />\r\n                      <Link className={classes.link} to={`/profile/${employee.id}`}>\r\n                        {employee.name}\r\n                      </Link>\r\n                    </div>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </div>\r\n  ) : null;\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  input: {\r\n    maxWidth: '100%',\r\n    width: 250,\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  alert: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(2),\r\n    left: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n}));\r\n","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { authUser } from '../../redux/actions';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { useStyles } from './Auth.style';\r\n\r\nexport const Auth = () => {\r\n  const dispatch = useDispatch();\r\n  const appState = useSelector(state => state.app);\r\n  const classes = useStyles();\r\n\r\n  const [authData, setAuthData] = useState({\r\n    email: {\r\n      value: '',\r\n      error: '',\r\n    },\r\n    password: {\r\n      value: '',\r\n      error: '',\r\n    },\r\n  });\r\n\r\n  const handleAuthData = e => {\r\n    const key = e.target.name;\r\n    setAuthData({ ...authData, [key]: { ...authData[key], value: e.target.value } });\r\n  };\r\n\r\n  const auth = () => {\r\n    const result = dispatch(authUser(authData));\r\n\r\n    if (result) {\r\n      setAuthData(result);\r\n    }\r\n  };\r\n\r\n  return appState.data ? (\r\n    <div className={classes.root}>\r\n      <TextField\r\n        className={classes.input}\r\n        name=\"email\"\r\n        label=\"Электронная почта\"\r\n        value={authData.email.value}\r\n        error={Boolean(authData.email.error)}\r\n        helperText={authData.email.error}\r\n        onChange={e => handleAuthData(e)}\r\n      />\r\n      <br />\r\n      <TextField\r\n        className={classes.input}\r\n        name=\"password\"\r\n        label=\"Пароль\"\r\n        type=\"password\"\r\n        value={authData.password.value}\r\n        error={Boolean(authData.password.error)}\r\n        helperText={authData.password.error}\r\n        onChange={e => handleAuthData(e)}\r\n      />\r\n      <br />\r\n      <Button className={classes.button} variant=\"contained\" color=\"primary\" disableElevation onClick={() => auth()}>\r\n        Войти\r\n      </Button>\r\n      <br />\r\n      <Alert className={classes.alert} severity=\"info\" variant=\"outlined\">\r\n        ivanov.ivan@rosatom.ru / qwerty1\r\n      </Alert>\r\n    </div>\r\n  ) : null;\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  schedule: {\r\n    maxWidth: 375,\r\n    width: '100%',\r\n  },\r\n  scheduleHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  day: {\r\n    width: '100%',\r\n  },\r\n  chip: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  process: {\r\n    margin: theme.spacing(1, 2),\r\n    padding: theme.spacing(1),\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: `${theme.palette.primary.main} !important`,\r\n  },\r\n  dayOff: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createScheduleByEmployeeId } from '../../redux/actions';\r\nimport { MobileStepper, IconButton, Typography, Paper, Chip } from '@material-ui/core';\r\nimport { KeyboardArrowRight, KeyboardArrowLeft } from '@material-ui/icons';\r\nimport { useStyles } from './Schedule.style';\r\nimport { setDay } from 'date-fns';\r\n\r\nexport const Schedule = () => {\r\n  const dispatch = useDispatch();\r\n  const appState = useSelector(state => state.app);\r\n  const classes = useStyles();\r\n  const params = useParams();\r\n\r\n  const [schedule, setSchedule] = useState(null);\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const days = ['Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница'];\r\n\r\n  const toggleDay = value => {\r\n    setActiveStep(activeStep + value);\r\n  };\r\n\r\n  const formatDate = day => {\r\n    const date = setDay(new Date(), day);\r\n    return `${('0' + date.getDate()).slice(-2)}.${('0' + (date.getMonth() + 1)).slice(-2)}`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (appState.data && (!schedule || schedule.employeeId !== params.employeeId)) {\r\n      setSchedule(dispatch(createScheduleByEmployeeId(params.employeeId)));\r\n    }\r\n  }, [appState.data, schedule, params.employeeId, dispatch]);\r\n\r\n  return schedule ? (\r\n    <div className={classes.root}>\r\n      <div className={classes.schedule}>\r\n        <div className={classes.scheduleHeader}>\r\n          <Typography className={classes.day} variant=\"body1\">\r\n            {days[activeStep]}\r\n          </Typography>\r\n          <Chip className={classes.chip} label={formatDate(activeStep + 1)} size=\"small\" />\r\n        </div>\r\n        {schedule.days[activeStep].length ? (\r\n          schedule.days[activeStep].map(process => (\r\n            <Paper key={process.id} className={classes.process} variant=\"outlined\">\r\n              <Typography className={classes.link} variant=\"body1\" component={Link} to={`/process-list/${process.id}`}>\r\n                {process.name}\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                {process.schedule.timeStart} &mdash; {process.schedule.timeEnd}\r\n              </Typography>\r\n            </Paper>\r\n          ))\r\n        ) : (\r\n          <Typography className={classes.dayOff} variant=\"body2\" align=\"center\">\r\n            Работы нет, можно отдохнуть! &#128525;\r\n          </Typography>\r\n        )}\r\n        <MobileStepper\r\n          steps={schedule.days.length}\r\n          position=\"bottom\"\r\n          variant=\"dots\"\r\n          activeStep={activeStep}\r\n          nextButton={\r\n            <IconButton disabled={activeStep === schedule.days.length - 1} onClick={() => toggleDay(1)}>\r\n              <KeyboardArrowRight />\r\n            </IconButton>\r\n          }\r\n          backButton={\r\n            <IconButton disabled={activeStep === 0} onClick={() => toggleDay(-1)}>\r\n              <KeyboardArrowLeft />\r\n            </IconButton>\r\n          }\r\n        />\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  card: {\r\n    maxWidth: 345,\r\n    width: '100%',\r\n  },\r\n  cardActions: {\r\n    display: 'flex',\r\n    '& > *:first-child': {\r\n      marginLeft: theme.spacing(1),\r\n      width: '100%',\r\n    },\r\n  },\r\n}));\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { findSpecialtyById } from '../../redux/actions';\r\nimport { IconButton, Typography, Card, CardContent, CardActions, Collapse } from '@material-ui/core';\r\nimport { ExpandLess, ExpandMore } from '@material-ui/icons';\r\nimport { useStyles } from './Specialty.style';\r\n\r\nexport const Specialty = () => {\r\n  const dispatch = useDispatch();\r\n  const appState = useSelector(state => state.app);\r\n  const classes = useStyles();\r\n  const params = useParams();\r\n\r\n  const [specialty, setSpecialty] = useState(null);\r\n  const [instructionOpened, setInstructionOpened] = useState(false);\r\n\r\n  const toggleInstructionOpened = () => {\r\n    setInstructionOpened(!instructionOpened);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (appState.data && (!specialty || specialty.id !== params.specialtyId)) {\r\n      setSpecialty(dispatch(findSpecialtyById(params.specialtyId)));\r\n    }\r\n  }, [appState.data, specialty, params.specialtyId, dispatch]);\r\n\r\n  return specialty ? (\r\n    <div className={classes.root}>\r\n      <Card className={classes.card}>\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h6\">\r\n            {specialty.name}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {specialty.description}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions className={classes.cardActions}>\r\n          <Typography variant=\"body2\">Должностная инструкция</Typography>\r\n          <IconButton className={classes.expandButton} onClick={toggleInstructionOpened}>\r\n            {instructionOpened ? <ExpandLess /> : <ExpandMore />}\r\n          </IconButton>\r\n        </CardActions>\r\n        <Collapse in={instructionOpened} timeout=\"auto\" unmountOnExit>\r\n          <CardContent>\r\n            {specialty.instruction.split('\\n').map((paragraph, index) => (\r\n              <Typography key={index} variant=\"body2\" gutterBottom>\r\n                {paragraph}\r\n              </Typography>\r\n            ))}\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n    </div>\r\n  ) : null;\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  link: {\r\n    display: 'block',\r\n    textDecoration: 'none',\r\n    color: `${theme.palette.primary.main} !important`,\r\n  },\r\n}));\r\n","import { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { useStyles } from './CommonDocuments.style';\r\n\r\nexport const CommonDocuments = () => {\r\n  const appState = useSelector(state => state.app);\r\n  const classes = useStyles();\r\n\r\n  return appState.data ? (\r\n    <div className={classes.root}>\r\n      {appState.data.commonDocuments.map(document => (\r\n        <Link key={document.id} className={classes.link} to={`/common-documents/${document.id}`}>\r\n          {document.name}\r\n        </Link>\r\n      ))}\r\n    </div>\r\n  ) : null;\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n}));\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Typography } from '@material-ui/core';\r\nimport { useStyles } from './CommonDocument.style';\r\nimport { findCommonDocumentById } from '../../redux/actions';\r\n\r\nexport const CommonDocument = () => {\r\n  const dispatch = useDispatch();\r\n  const appState = useSelector(state => state.app);\r\n  const classes = useStyles();\r\n  const params = useParams();\r\n  const [document, setDocument] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (appState.data && (!document || document.id !== params.documentId)) {\r\n      setDocument(dispatch(findCommonDocumentById(params.documentId)));\r\n    }\r\n  }, [appState.data, document, params.documentId, dispatch]);\r\n\r\n  return document ? (\r\n    <div className={classes.root}>\r\n      <Typography gutterBottom variant=\"h6\">\r\n        {document.name}\r\n      </Typography>\r\n      {document.text.split('\\n').map((paragraph, index) => (\r\n        <Typography key={index} variant=\"body2\" gutterBottom>\r\n          {paragraph}\r\n        </Typography>\r\n      ))}\r\n    </div>\r\n  ) : null;\r\n};\r\n","import { useEffect, useState } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authUser, fetchData } from '../../redux/actions';\nimport { Container } from '@material-ui/core';\nimport { useStyles } from './App.style';\nimport { LeftDrawer } from '../LeftDrawer/LeftDrawer';\nimport { Header } from '../Header/Header';\nimport { ProcessList } from '../ProcessList/ProcessList';\nimport { Profile } from '../Profile/Profile';\nimport { Process } from '../Process/Process';\nimport { Employees } from '../Employees/Employees';\nimport { Auth } from '../Auth/Auth';\nimport { Schedule } from '../Schedule/Schedule';\nimport { Specialty } from '../Specialty/Specialty';\nimport { CommonDocuments } from '../CommonDocuments/CommonDocuments';\nimport { CommonDocument } from '../CommonDocument/CommonDocument';\n\nexport const App = () => {\n  const dispatch = useDispatch();\n  const appState = useSelector(state => state.app);\n  const classes = useStyles();\n\n  const [drawerOpened, setDrawerOpened] = useState(false);\n\n  const toggleDrawer = () => {\n    setDrawerOpened(!drawerOpened);\n  };\n\n  useEffect(() => {\n    if (!appState.data) {\n      dispatch(fetchData());\n    } else if (!appState.user) {\n      dispatch(authUser());\n    }\n  });\n\n  return (\n    <Container className={classes.root} fixed disableGutters>\n      <LeftDrawer drawerOpened={drawerOpened} toggleDrawer={toggleDrawer} />\n      <Header toggleDrawer={toggleDrawer} />\n      <div className={classes.toolbar} />\n      {appState.user ? (\n        <Switch>\n          <Route exact path=\"/\">\n            <Redirect to={`/schedule/${appState.user.id}`} />\n          </Route>\n          <Route exact path={'/profile/:employeeId'}>\n            <Profile />\n          </Route>\n          <Route exact path={'/schedule/:employeeId'}>\n            <Schedule />\n          </Route>\n          <Route exact path={'/process-list'}>\n            <ProcessList />\n          </Route>\n          <Route exact path={'/process-list/:processId'}>\n            <Process />\n          </Route>\n          <Route exact path={'/employees'}>\n            <Employees />\n          </Route>\n          <Route exact path={'/common-documents'}>\n            <CommonDocuments />\n          </Route>\n          <Route exact path={'/common-documents/:documentId'}>\n            <CommonDocument />\n          </Route>\n          <Route exact path={'/specialties/:specialtyId'}>\n            <Specialty />\n          </Route>\n        </Switch>\n      ) : (\n        <Auth />\n      )}\n    </Container>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { theme } from './theme';\nimport '@fontsource/roboto';\nimport '@fontsource/roboto/500.css';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { rootReducer } from './redux/rootReducer';\nimport { App } from './components/App/App';\nimport './index.css';\n\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <App />\n      </ThemeProvider>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}